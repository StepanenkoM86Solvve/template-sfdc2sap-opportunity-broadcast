<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">Salesforce to SAP Opportunity Broadcast</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
This Anypoint Template should serve as a foundation for setting an online sync of won opportunities from Salesforce to Sales orders in SAP.
Every time there is a new won opportunity or a change in an already existing one with assigned Account in Salesforce instance, the template will fetch it and send it to SAP to upsert sales order there.
			
Requirements have been set not only to be used as examples, but also to establish a starting point to adapt your integration to your requirements.
			
As implemented, this Anypoint Template leverages the [Batch Module](http://www.mulesoft.org/documentation/display/current/Batch+Processing).
The batch job is divided into *Process* and *On Complete* stages.

The integration is triggered by scheduler to Salesforce opportunities. New or modified opportunities, which fulfill *IsWon* and *HasAccount* criteria are passed to the batch as input.
In the batch, the sales order is fetched from SAP by its purchase order number equal to opportunity ID.
If it exists, more sales order details are fetched from SAP.

In next batch step if the property account.sync.policy is set to 'syncAccount', the customer is looked up by opportunity account name.
If the customer is found, its sales areas are fetched from SAP and first one is selected to be used for sales order creation.
If it is not found, then the dummy customer is used with pre-configured sales area and customer number.
On the other hand, if the property account.sync.policy is set to different value, the pre-configured sales area and customer number are used.
Template doesn't support changing customer of the existing sales order.

Another step creates or updates sales order in SAP. 
Finally during the On Complete stage the Anypoint Template will log output statistics data into the console.
		</section>
		<section id="running_on_studio">
		<![CDATA[
In order to make this Anypoint Template run on Mule Studio there are a few extra steps that need to be made.
Please check this Documentation Page:

+ [Enabling Your Studio Project for SAP](http://www.mulesoft.org/documentation/display/current/SAP+Connector#SAPConnector-EnablingYourStudioProjectforSAP)
		]]>
		</section>
		<section id="considerations">
		<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered. All of them deal with the preparations in both, that must be made in order for all to run smoothly.
**Failing to do so could lead to unexpected behavior of the template.**

Before continue with the use of this Anypoint Template, you may want to check out this [Documentation Page](http://www.mulesoft.org/documentation/display/current/SAP+Connector#SAPConnector-EnablingYourStudioProjectforSAP), that will teach you how to work 
with SAP and Anypoint Studio.

## Disclaimer

This Anypoint template uses a few private Maven dependencies from Mulesoft in order to work. If you intend to run this template with Maven support, you need to add three extra dependencies for SAP to the pom.xml file.
		]]>
		</section>
		<section id="api_calls">
Salesforce imposes limits on the number of API Calls that can be made. However, in this template, only one call per poll cycle is done to retrieve all the information required.		
		</section>
		<section id="application_configuration">
		<![CDATA[
**Common configuration**

+ scheduler.frequency `10000`
+ scheduler.start.delay `1000`
+ watermark.default.expression `2014-08-14T10:15:00.000Z`

+ account.sync.policy `syncAccount`	

**Note:** the property **account.sync.policy** can take any of the two following values: 
+ **empty_value**: if the property has no value assigned to it then application will do nothing in respect to the account and it'll just assign the account and sales areas from the properties file.
+ **syncAccount**: it will try to get and fetch sales areas data from SAP Customer if it exists.
		
**Salesforce Connector configuration**

+ sfdc.username `bob.dylan@sfdc`
+ sfdc.password `DylanPassword123`
+ sfdc.securityToken `avsfwCUl7apQs56Xq2AKi3X`

**SAP Connector configuration**

+ sap.jco.ashost `your.sap.address.com`
+ sap.jco.user `SAP_USER`
+ sap.jco.passwd `SAP_PASS`
+ sap.jco.sysnr `14`
+ sap.jco.client `800`
+ sap.jco.lang `EN`

**SAP Account(customer) configuration**

+ account.sapCustomerNumber `0000400492`
+ account.sapSalesOrganization `3020`
+ account.sapDistributionChannel `30`
+ account.sapDivision `00`
]]>
		</section>
	</sections>
</configuration>